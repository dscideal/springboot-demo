##package ${package.Entity};
package com.migu.ngoc.model.${serviceField};
###if(${activeRecord})
##import java.io.Serializable;
###end
###foreach($pkg in ${table.importPackages})
##import ${pkg};
###end
###if(${entityLombokModel})
##
##import com.baomidou.mybatisplus.annotations.Version;
##
##import lombok.Data;
##import lombok.EqualsAndHashCode;
##import lombok.experimental.Accessors;
###end
/**
 * $!{table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
public class ${entity}Model{
##    private static final long serialVersionUID = 1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
###if(${field.keyFlag})
## 主键
###if(${field.keyIdentityFlag})
##    @TableId(value = "${field.name}", type = IdType.AUTO)
###elseif(!$null.isNull(${idType}) && "$!idType" != "")
##    @TableId(value = "${field.name}", type = IdType.${idType})
###elseif(${field.convert})
##    @TableId("${field.name}")
###end
## 普通字段 字段名${field.name} 驼峰名${field.propertyName}
###elseif(${field.fill})
## -----   存在字段填充设置   -----
###if(${field.convert})
##    @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
###else
##    @TableField(fill = FieldFill.${field.fill})
###end
###elseif(${field.convert})
##    @TableField("${field.name}")
###end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
    @Version
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
    @TableLogic
#end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#if(${entityBuilderModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
        return this;
#end
    }
#end
#end

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end

}
